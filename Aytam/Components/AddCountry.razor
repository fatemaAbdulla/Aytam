@using Aytam.Data
@inject ApplicationDbContext _db



@if (Show)
{
    <div class="modal fade show" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" style="display:block">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Add New Country</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <AlertMessage Message="@_ErrorMessage" AlertType="@AlertType.Danger"></AlertMessage>
                    <div class="form-group">
                        <label for="CountryName">Country Name:</label><br />
                        <input @bind="@_CountryName" @bind:event="oninput" type="text" class="form-control" id="CountryName" /><br />
                    </div>
                    <div class="form-group">
                        <label for="CountryCode">Country Code:</label><br />
                        <input @bind="@_CountryCode" @bind:event="oninput" type="text" class="form-control" id="CountryCode" /><br />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="Close">Close</button>
                    <button type="button" disabled="@isEmpty" class="btn btn-primary" @onclick="AddNewCountry">Add Country</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
    
}




@code {
    
    private string _CountryCode = "";
    private string _CountryName = "";
    private string _ErrorMessage = "";
    [Parameter]
    public bool Show { get; set; }
    [Parameter]
    public EventCallback<Country> OnCountryAdded { get; set; }

    private async Task Close()
    {
        await OnCountryAdded.InvokeAsync(null);
    }

    public bool isEmpty
    {
        get
        {
            return string.IsNullOrEmpty(_CountryName) || string.IsNullOrEmpty(_CountryCode);
        }
    }

    private async Task AddNewCountry()
    {
        Country country = new Country
        {
            CountryName = _CountryName,
            CountryCode = _CountryCode
        };
        try
        {
            _db.Countries.Add(country);
            await _db.SaveChangesAsync();
            await OnCountryAdded.InvokeAsync(country);
        }
        catch (Exception ex)
        {
            _ErrorMessage = ex.Message;
        }


        _CountryName = "";
        _CountryCode = "";
    }



}
